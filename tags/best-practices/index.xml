<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>best practices on Outsource the problem</title>
    <link>https://hqhs.github.io/tags/best-practices/</link>
    <description>Recent content in best practices on Outsource the problem</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://hqhs.github.io/tags/best-practices/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Optional types in go done right</title>
      <link>https://hqhs.github.io/blog/1/optional-types-in-go-done-right/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hqhs.github.io/blog/1/optional-types-in-go-done-right/</guid>
      <description>Optional types in Go Suppose you have a problem: you got relatively small go codebase (10 kloc without tests) to support &amp;amp; develop at your job. You started to add new features, writing tests, deploying it to production on daily basis, and&amp;hellip; It keeps crashing. I&amp;rsquo;m simply dont know every possible problem this codebase has, hence going to talk about only one of them: optional fields done right and wrong, with examples.</description>
    </item>
    
  </channel>
</rss>