<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>networking on Outsource the problem</title>
    <link>https://hqhs.github.io/series/networking/</link>
    <description>Recent content in networking on Outsource the problem</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 08 Aug 2019 10:00:00 +0300</lastBuildDate>
    
	<atom:link href="https://hqhs.github.io/series/networking/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Understanding gRPC runtime</title>
      <link>https://hqhs.github.io/blog/2019/understanding-grpc-runtime/</link>
      <pubDate>Thu, 08 Aug 2019 10:00:00 +0300</pubDate>
      
      <guid>https://hqhs.github.io/blog/2019/understanding-grpc-runtime/</guid>
      <description>&lt;p&gt;Suppose you have a problem: in order to use new hyped shining &amp;ldquo;gRPC&amp;rdquo;
communication framework, you need to be familural with it&amp;rsquo;s runtime, but
networking internals is terrifyingly complicated. Here&amp;rsquo;s the result of my
digging in source code presented in text form, written in order to build
complete understanding of gRPC internals and design decisions and today&amp;rsquo;s
networking stack.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>